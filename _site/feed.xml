<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Learn Web</title>
    <description>This site was created for learning the web development</description>
    <link>http://localhost:4000/LearnWeb/</link>
    <atom:link href="http://localhost:4000/LearnWeb/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 25 Jan 2017 23:22:29 +0600</pubDate>
    <lastBuildDate>Wed, 25 Jan 2017 23:22:29 +0600</lastBuildDate>
    <generator>Jekyll v3.3.1</generator>
    
      <item>
        <title>Markdown tag example</title>
        <description>&lt;h1 id=&quot;markdown-heading&quot;&gt;Markdown heading&lt;/h1&gt;

&lt;p&gt;For markdown heading add &lt;strong&gt;#&lt;/strong&gt; symbole.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# h1
## h2
### h3
#### h4
##### h5
###### h6
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;markdown-blockquote&quot;&gt;Markdown blockquote&lt;/h1&gt;

&lt;p&gt;For Markdown blockquote use &lt;strong&gt;&amp;gt;&lt;/strong&gt; symbole.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; Blockquote.
&amp;gt;
&amp;gt; &amp;gt; Second paragraph in the blockquote, nested.
&amp;gt; ## This is an h2 in a blockquote
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;markdown-text-formating&quot;&gt;Markdown text formating&lt;/h1&gt;

&lt;p&gt;For Markdown text formating use single * for &lt;em&gt;empesize&lt;/em&gt; text, ** for &lt;strong&gt;strong&lt;/strong&gt; text.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;For Markdown text formating use single * for *empesize* text, ** for **strong** text.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;markdown-list-item&quot;&gt;Markdown list item.&lt;/h1&gt;

&lt;p&gt;For Markdown list item use * or + or - for unorder list, for orderlist use any serial number.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Unorder list&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* Candy.
* Gum.
* Booze.

+ Candy.
+ Gum.
+ Booze.

- Candy.
- Gum.
- Booze.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Ordered list&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. List item 1
2. List item 2
3. List item 3

a. List item 1
b. List item 1
c. List item 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;markdown-link&quot;&gt;Markdown link&lt;/h1&gt;

&lt;p&gt;For markdown link use following format.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//normal link
[inline link](http://xrl.us/ &quot;optional title&quot;)
//referance link
[link][1]
[1]: http://xrl.us/ &quot;optional title&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;markdown-image-adding&quot;&gt;Markdown image adding&lt;/h1&gt;

&lt;p&gt;For markdown inserting image use the following markup.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//normal image
![Alt text](/path/to/img.jpg &quot;Optional title&quot;)
//referance image
![Alt text][1]
[1]: /path/to/img.jpg &quot;Optional title&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;markdown-code-example&quot;&gt;Markdown code example&lt;/h1&gt;

&lt;p&gt;For markdown code , inline code surround with ` and `, code block surround with following way.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;~~~~~~~
&lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;This is a heading&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is a paragraph&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
~~~~~~~&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Wed, 04 May 2016 00:00:00 +0600</pubDate>
        <link>http://localhost:4000/LearnWeb/2016/05/04/markdown-tag-example.html</link>
        <guid isPermaLink="true">http://localhost:4000/LearnWeb/2016/05/04/markdown-tag-example.html</guid>
        
        
      </item>
    
      <item>
        <title>Installing Jekyll</title>
        <description>&lt;p&gt;Getting started with Jekyll is relatively simple, although perhaps not &lt;em&gt;quite&lt;/em&gt; as simple as their documentation would have you believe. There are a number of dependencies and requirements you have to satisfy before installing and using Jekyll. Let’s explore those dependencies and talk about the process of getting started with Jekyll.&lt;/p&gt;

&lt;p&gt;First, let’s cover what you’ll need to have installed before you can run Jekyll. As Jekyll is a Ruby app it helps if you’re on a Unix, Linux, or OS X system. According to Jekyll you &lt;em&gt;can&lt;/em&gt; get Jekyll to run on Windows, it just requires some work. I’ve never tried it, but &lt;a href=&quot;http://jekyll-windows.juthilo.com/&quot; title=&quot;jekyll for windows&quot;&gt;you can read more about the process here&lt;/a&gt; if you’re interested.&lt;/p&gt;

&lt;p&gt;You’ll also need the latest versions of &lt;a href=&quot;https://www.ruby-lang.org&quot; title=&quot;ruby&quot;&gt;Ruby&lt;/a&gt; and &lt;a href=&quot;https://rubygems.org/&quot; title=&quot;ruby gems&quot;&gt;Ruby Gems&lt;/a&gt;. One of the easiest ways to ensure you’re using the right version of Ruby is to use &lt;a href=&quot;https://rvm.io&quot; title=&quot;Ruby version manager&quot;&gt;RVM&lt;/a&gt;, a Ruby version manager. It can be a bit of a pain to setup, but once installed making sure you have the latest version is as easy as typing the following into Terminal (where ‘2.2.3’ is the latest version number):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;rvm install 2.2.3&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If you’re on a Mac you’ll also need &lt;a href=&quot;https://developer.apple.com/xcode/&quot; title=&quot;xcode&quot;&gt;Xcode Command Line Tools&lt;/a&gt;. This can be a little tricky depending upon which version of OSX you’re using. If you’re using any version after Mavericks just type the following in Terminal:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;gcc&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;GCC is a compiler command, and requires Command Line Tools to work, so if they’re not installed OSX will prompt you to install it. For Mavericks or earlier you’ll need to manually download Xcode from Apple and select the “Install Command Line Tools” option when installing it.&lt;/p&gt;

&lt;p&gt;By now you’ve probably noticed that you’ll be spending a good bit of time in Terminal or in the command line when installing and using Jekyll. If you’re already comfortable with Terminal that shouldn’t really be a problem for you. Some of you, however, are probably pretty nervous at the thought of having to spend that much time in the command line. I totally understand if you fit into that category, I’m not that comfortable myself. The first time I tried to install Jekyll I had a terrible time getting my dependencies set up. In the end it had more to do with the version of OSX I was using, but it was a longer process than I was prepared for. Here’s my Twitter stream during that time:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/LearnWeb/images/jekyll_install.jpg&quot; alt=&quot;My Twitter stream&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Just be prepared to spend some time getting everything set up, and don’t get discouraged if what you’re doing doesn’t work right away. Spend some time researching any error messages that shows up and you’ll be fine.&lt;/p&gt;

&lt;p&gt;Once all your dependencies are installed you’re ready to install Jekyll. For the most part it’s very straightforward, all you’ll need to do is type the following at the command line prompt:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;gem install jekyll&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If you run into permission issues, add ‘sudo’ before &lt;strong&gt;gem&lt;/strong&gt; and that should do the trick. If you’re planning on using Github Pages to deploy and host your site, you might want to ensure you’re using the same version of Jekyll and Liquid as Github Pages. You can check those version numbers on the &lt;a href=&quot;https://github.com/github/pages-gem/blob/master/lib/github-pages.rb&quot; title=&quot;Github Pages&quot;&gt;Github Pages Gem repository&lt;/a&gt;. To do version specific installs you’d do the following:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;gem update --system
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;gem install liquid -v 2.6.2
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;gem install jekyll -v 2.4.0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Those version numbers are correct as of August of 2015, but be sure to check prior to doing your own install. Once you’ve got Jekyll installed you’re ready to start using it! We’ll take a look at basic Jekyll functionality in our next post!&lt;/p&gt;
</description>
        <pubDate>Wed, 04 May 2016 00:00:00 +0600</pubDate>
        <link>http://localhost:4000/LearnWeb/2016/05/04/installing-jekyll.html</link>
        <guid isPermaLink="true">http://localhost:4000/LearnWeb/2016/05/04/installing-jekyll.html</guid>
        
        <category>js</category>
        
        <category>html</category>
        
        <category>css</category>
        
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Sat, 23 Apr 2016 23:15:00 +0600</pubDate>
        <link>http://localhost:4000/LearnWeb/wordpress/2016/04/23/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://localhost:4000/LearnWeb/wordpress/2016/04/23/welcome-to-jekyll.html</guid>
        
        
        <category>wordpress</category>
        
      </item>
    
      <item>
        <title>Jekyll code snippet</title>
        <description>&lt;h1 id=&quot;configyml-file-setup&quot;&gt;_config.yml file setup&lt;/h1&gt;

&lt;p&gt;In &lt;strong&gt;_config.yml&lt;/strong&gt; file contain following data.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;title&lt;/strong&gt;: Site title goes here.
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: any value.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;description&lt;/strong&gt;: Site description goes here.
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: any value.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;markdown&lt;/strong&gt;: Site markdown file covertion.
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: kramdown,redcarpet etc.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;baseurl&lt;/strong&gt;: Site subdomen name.
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: ‘/example-name/’, any value&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;url&lt;/strong&gt;: Site real url.
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: “http://example.com/” etc.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;paginate&lt;/strong&gt;: blog pagination number.
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: any number,&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;paginate_path&lt;/strong&gt;: give the pagination path which contain the devided page with serial number.
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: ‘/blog/page:num/’&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;permalink&lt;/strong&gt;: Site parmalink style.
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: it default value.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;how-to-get-all-the-post-post-loop&quot;&gt;How to get all the post (post loop).&lt;/h1&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;{% for post in site.posts %}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;article&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;role=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;article&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;header&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post_header&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{site.baseurl}}{{post.url}}&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{post.title}}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;{{post.title}}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Posted on: {{ post.date | date: &quot;%B %d, %Y&quot; }}{% raw %}, Posted by: &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{% raw %}{{site.baseurl}}/author/{{post.author}}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;{{ post.author }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/header&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;{{post.excerpt | strip_html}} &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{site.baseurl}}{{post.url}}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Read more&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;footer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post_footer&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Posted in {% for tag in post.tags %}&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ site.baseurl }}/tags/index.html#{{ tag | replace: ' ', ''}}&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Pages tagged {{ tag }}&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;tag&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;{% unless forloop.last %}, {% endunless %}{% endfor %}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/footer&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/article&amp;gt;&lt;/span&gt;
{% endfor %}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;tag-cloud-loop&quot;&gt;Tag cloud loop.&lt;/h1&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-liquid&quot; data-lang=&quot;liquid&quot;&gt;&amp;lt;div class=&quot;sidebar sidebar_module&quot;&amp;gt;
	&amp;lt;h2&amp;gt;Tag cloud&amp;lt;/h2&amp;gt;
	&amp;lt;ul class=&quot;tag-cloud&quot;&amp;gt;

		
		

		
			&amp;lt;li&amp;gt;&amp;lt;a href=&quot;/LearnWeb/blog/tag/index.html#css&quot;&amp;gt;css [5]&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        
			&amp;lt;li&amp;gt;&amp;lt;a href=&quot;/LearnWeb/blog/tag/index.html#git&quot;&amp;gt;git [3]&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        
			&amp;lt;li&amp;gt;&amp;lt;a href=&quot;/LearnWeb/blog/tag/index.html#html&quot;&amp;gt;html [2]&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        
			&amp;lt;li&amp;gt;&amp;lt;a href=&quot;/LearnWeb/blog/tag/index.html#jekyll&quot;&amp;gt;jekyll [6]&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        
			&amp;lt;li&amp;gt;&amp;lt;a href=&quot;/LearnWeb/blog/tag/index.html#js&quot;&amp;gt;js [2]&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        
			&amp;lt;li&amp;gt;&amp;lt;a href=&quot;/LearnWeb/blog/tag/index.html#liquid&quot;&amp;gt;liquid [1]&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        
			&amp;lt;li&amp;gt;&amp;lt;a href=&quot;/LearnWeb/blog/tag/index.html#php&quot;&amp;gt;php [5]&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        
			&amp;lt;li&amp;gt;&amp;lt;a href=&quot;/LearnWeb/blog/tag/index.html#tips&quot;&amp;gt;tips [4]&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        
			&amp;lt;li&amp;gt;&amp;lt;a href=&quot;/LearnWeb/blog/tag/index.html#wordpress&quot;&amp;gt;wordpress [5]&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        

    &amp;lt;/ul&amp;gt;
&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;#new heading&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-liquid&quot; data-lang=&quot;liquid&quot;&gt;    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;post&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;site.posts&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
      &amp;lt;li&amp;gt;
	  &amp;lt;a href=&quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&quot;&amp;gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&amp;lt;/a&amp;gt;
      &amp;lt;/li&amp;gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;endfor&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;tag-archive-page-post-loop&quot;&gt;Tag archive page post loop&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;



	&amp;lt;div class=&quot;tag-archive&quot;&amp;gt;
		&amp;lt;h3 id=&quot;css&quot;&amp;gt;css&amp;lt;/h3&amp;gt;
		&amp;lt;ul class=&quot;taglist&quot;&amp;gt;
		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;May 04, 2016&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/2016/05/04/installing-jekyll.html&quot; title=&quot;Installing Jekyll&quot;&amp;gt;Installing Jekyll&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Feb 26, 2016&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/php/2016/02/26/welcome-to-jekyll-2.html&quot; title=&quot;Welcome to Jekyll-1!&quot;&amp;gt;Welcome to Jekyll-1!&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Jul 13, 2015&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/2015/07/13/css.html&quot; title=&quot;Jekyll and CSS&quot;&amp;gt;Jekyll and CSS&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Jul 09, 2015&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/html/2015/07/09/front-matter.html&quot; title=&quot;YAML front matter&quot;&amp;gt;YAML front matter&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Jun 29, 2015&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/css/2015/06/29/markdown-basics.html&quot; title=&quot;Markdown Basics&quot;&amp;gt;Markdown Basics&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		
		&amp;lt;/ul&amp;gt;
	&amp;lt;/div&amp;gt;

	&amp;lt;div class=&quot;tag-archive&quot;&amp;gt;
		&amp;lt;h3 id=&quot;git&quot;&amp;gt;git&amp;lt;/h3&amp;gt;
		&amp;lt;ul class=&quot;taglist&quot;&amp;gt;
		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Aug 01, 2015&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/2015/08/01/deployment-options.html&quot; title=&quot;Deployment Options&quot;&amp;gt;Deployment Options&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Apr 30, 2015&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/2015/04/30/basic-commands.html&quot; title=&quot;Basic Commands&quot;&amp;gt;Basic Commands&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Apr 23, 2015&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/jekyll/2015/04/23/exploring-jekyll.html&quot; title=&quot;Exploring Jekyll&quot;&amp;gt;Exploring Jekyll&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		
		&amp;lt;/ul&amp;gt;
	&amp;lt;/div&amp;gt;

	&amp;lt;div class=&quot;tag-archive&quot;&amp;gt;
		&amp;lt;h3 id=&quot;html&quot;&amp;gt;html&amp;lt;/h3&amp;gt;
		&amp;lt;ul class=&quot;taglist&quot;&amp;gt;
		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;May 04, 2016&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/2016/05/04/installing-jekyll.html&quot; title=&quot;Installing Jekyll&quot;&amp;gt;Installing Jekyll&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Feb 27, 2016&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/2016/02/27/welcome-to-jekyll.html&quot; title=&quot;Welcome to Jekyll!&quot;&amp;gt;Welcome to Jekyll!&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		
		&amp;lt;/ul&amp;gt;
	&amp;lt;/div&amp;gt;

	&amp;lt;div class=&quot;tag-archive&quot;&amp;gt;
		&amp;lt;h3 id=&quot;jekyll&quot;&amp;gt;jekyll&amp;lt;/h3&amp;gt;
		&amp;lt;ul class=&quot;taglist&quot;&amp;gt;
		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Feb 27, 2016&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/2016/02/27/welcome-to-jekyll.html&quot; title=&quot;Welcome to Jekyll!&quot;&amp;gt;Welcome to Jekyll!&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Aug 01, 2015&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/2015/08/01/deployment-options.html&quot; title=&quot;Deployment Options&quot;&amp;gt;Deployment Options&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Jun 07, 2015&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/js/2015/06/07/liquid-syntax.html&quot; title=&quot;Liquid Syntax Basics&quot;&amp;gt;Liquid Syntax Basics&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;May 14, 2015&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/2015/05/14/configuration.html&quot; title=&quot;Configuration Options&quot;&amp;gt;Configuration Options&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Apr 23, 2015&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/jekyll/2015/04/23/exploring-jekyll.html&quot; title=&quot;Exploring Jekyll&quot;&amp;gt;Exploring Jekyll&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Feb 15, 2015&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/html/2015/02/15/welcome-to-jekyll.html&quot; title=&quot;Welcome to Jekyll!&quot;&amp;gt;Welcome to Jekyll!&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		
		&amp;lt;/ul&amp;gt;
	&amp;lt;/div&amp;gt;

	&amp;lt;div class=&quot;tag-archive&quot;&amp;gt;
		&amp;lt;h3 id=&quot;js&quot;&amp;gt;js&amp;lt;/h3&amp;gt;
		&amp;lt;ul class=&quot;taglist&quot;&amp;gt;
		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;May 04, 2016&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/2016/05/04/installing-jekyll.html&quot; title=&quot;Installing Jekyll&quot;&amp;gt;Installing Jekyll&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Feb 27, 2016&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/2016/02/27/welcome-to-jekyll.html&quot; title=&quot;Welcome to Jekyll!&quot;&amp;gt;Welcome to Jekyll!&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		
		&amp;lt;/ul&amp;gt;
	&amp;lt;/div&amp;gt;

	&amp;lt;div class=&quot;tag-archive&quot;&amp;gt;
		&amp;lt;h3 id=&quot;liquid&quot;&amp;gt;liquid&amp;lt;/h3&amp;gt;
		&amp;lt;ul class=&quot;taglist&quot;&amp;gt;
		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Feb 15, 2015&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/html/2015/02/15/welcome-to-jekyll.html&quot; title=&quot;Welcome to Jekyll!&quot;&amp;gt;Welcome to Jekyll!&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		
		&amp;lt;/ul&amp;gt;
	&amp;lt;/div&amp;gt;

	&amp;lt;div class=&quot;tag-archive&quot;&amp;gt;
		&amp;lt;h3 id=&quot;php&quot;&amp;gt;php&amp;lt;/h3&amp;gt;
		&amp;lt;ul class=&quot;taglist&quot;&amp;gt;
		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Feb 26, 2016&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/php/2016/02/26/welcome-to-jekyll-2.html&quot; title=&quot;Welcome to Jekyll-1!&quot;&amp;gt;Welcome to Jekyll-1!&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Jul 13, 2015&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/2015/07/13/css.html&quot; title=&quot;Jekyll and CSS&quot;&amp;gt;Jekyll and CSS&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Jul 09, 2015&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/html/2015/07/09/front-matter.html&quot; title=&quot;YAML front matter&quot;&amp;gt;YAML front matter&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Jun 29, 2015&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/css/2015/06/29/markdown-basics.html&quot; title=&quot;Markdown Basics&quot;&amp;gt;Markdown Basics&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;May 14, 2015&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/2015/05/14/configuration.html&quot; title=&quot;Configuration Options&quot;&amp;gt;Configuration Options&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		
		&amp;lt;/ul&amp;gt;
	&amp;lt;/div&amp;gt;

	&amp;lt;div class=&quot;tag-archive&quot;&amp;gt;
		&amp;lt;h3 id=&quot;tips&quot;&amp;gt;tips&amp;lt;/h3&amp;gt;
		&amp;lt;ul class=&quot;taglist&quot;&amp;gt;
		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Feb 26, 2016&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/php/2016/02/26/welcome-to-jekyll-2.html&quot; title=&quot;Welcome to Jekyll-1!&quot;&amp;gt;Welcome to Jekyll-1!&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Jul 13, 2015&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/2015/07/13/css.html&quot; title=&quot;Jekyll and CSS&quot;&amp;gt;Jekyll and CSS&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Jul 09, 2015&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/html/2015/07/09/front-matter.html&quot; title=&quot;YAML front matter&quot;&amp;gt;YAML front matter&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Jun 29, 2015&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/css/2015/06/29/markdown-basics.html&quot; title=&quot;Markdown Basics&quot;&amp;gt;Markdown Basics&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		
		&amp;lt;/ul&amp;gt;
	&amp;lt;/div&amp;gt;

	&amp;lt;div class=&quot;tag-archive&quot;&amp;gt;
		&amp;lt;h3 id=&quot;wordpress&quot;&amp;gt;wordpress&amp;lt;/h3&amp;gt;
		&amp;lt;ul class=&quot;taglist&quot;&amp;gt;
		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Feb 26, 2016&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/php/2016/02/26/welcome-to-jekyll-2.html&quot; title=&quot;Welcome to Jekyll-1!&quot;&amp;gt;Welcome to Jekyll-1!&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Jul 13, 2015&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/2015/07/13/css.html&quot; title=&quot;Jekyll and CSS&quot;&amp;gt;Jekyll and CSS&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Jul 09, 2015&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/html/2015/07/09/front-matter.html&quot; title=&quot;YAML front matter&quot;&amp;gt;YAML front matter&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Jun 29, 2015&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/css/2015/06/29/markdown-basics.html&quot; title=&quot;Markdown Basics&quot;&amp;gt;Markdown Basics&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		

		&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Jun 07, 2015&amp;lt;/p&amp;gt; | &amp;lt;a href=&quot;/LearnWeb/js/2015/06/07/liquid-syntax.html&quot; title=&quot;Liquid Syntax Basics&quot;&amp;gt;Liquid Syntax Basics&amp;lt;/a&amp;gt;
		&amp;lt;/li&amp;gt;

		
		&amp;lt;/ul&amp;gt;
	&amp;lt;/div&amp;gt;
  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 28 Mar 2016 00:00:00 +0600</pubDate>
        <link>http://localhost:4000/LearnWeb/css/2016/03/28/jekyll-code-snippet.html</link>
        <guid isPermaLink="true">http://localhost:4000/LearnWeb/css/2016/03/28/jekyll-code-snippet.html</guid>
        
        
        <category>css</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Sat, 27 Feb 2016 22:01:03 +0600</pubDate>
        <link>http://localhost:4000/LearnWeb/2016/02/27/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://localhost:4000/LearnWeb/2016/02/27/welcome-to-jekyll.html</guid>
        
        <category>js</category>
        
        <category>jekyll</category>
        
        <category>html</category>
        
        
      </item>
    
      <item>
        <title>Welcome to Jekyll-1!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.
&lt;img src=&quot;/LearnWeb/img/slider-bg.jpg&quot; alt=&quot;A nice image&quot; /&gt;
To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Fri, 26 Feb 2016 21:01:03 +0600</pubDate>
        <link>http://localhost:4000/LearnWeb/php/2016/02/26/welcome-to-jekyll-2.html</link>
        <guid isPermaLink="true">http://localhost:4000/LearnWeb/php/2016/02/26/welcome-to-jekyll-2.html</guid>
        
        <category>php</category>
        
        <category>wordpress</category>
        
        <category>css</category>
        
        <category>tips</category>
        
        
        <category>php</category>
        
      </item>
    
      <item>
        <title>Deployment Options</title>
        <description>&lt;p&gt;Once you’ve finished building your Jekyll site you’ll need to decide where and how you want to deploy it. Since Jekyll builds static content you can serve it almost anywhere. There are no server-side dependencies, CMS installations, database administrators, or server stacks to worry about. If the server can handle HTML, CSS, and JavaScript, it can serve your site. With that in mind let’s take a look at some of the most common options for deploying Jekyll sites.&lt;/p&gt;

&lt;p&gt;###FTP/SFTP&lt;/p&gt;

&lt;p&gt;Almost all hosting companies allow you to upload content via FTP or SFTP. Simply use a FTP client (such as &lt;a href=&quot;https://filezilla-project.org/&quot; title=&quot;Filezilla&quot;&gt;Filezilla&lt;/a&gt;) to upload the contents of your &lt;strong&gt;_site&lt;/strong&gt; directory to the &lt;strong&gt;www&lt;/strong&gt; or &lt;strong&gt;public_html&lt;/strong&gt; directory of your hosting server. One downside to this method is the manual nature of updating your site. When files change you’ll need to manually overwrite your remote files. For larger sites this can be time-consuming and prone to errors.&lt;/p&gt;

&lt;p&gt;One option for enhancing FTP deployment is to use a Git-integrated FTP client like &lt;a href=&quot;https://github.com/git-ftp/git-ftp&quot; title=&quot;git-ftp&quot;&gt;git-ftp&lt;/a&gt;. This allows you to bring version control into your deployment workflow and only upload the files that have changed.&lt;/p&gt;

&lt;p&gt;###Git&lt;/p&gt;

&lt;p&gt;Speaking of Git, if you’re using it to source-control your site, you can set it up to push to your web server when it’s time for deployment. To do this you’ll need to set up a post-update hook on your remote server. You’ll also, of course, need Git installed on your server and SSH access. This method of deployment is a little more technical than others, so you’ll need to be comfortable with Git, the command line interface, and writing basic scripts. &lt;a href=&quot;http://nicolasgallagher.com/simple-git-deployment-strategy-for-static-sites/&quot; title=&quot;Git for static sites&quot;&gt;Nicolas Gallagher wrote one of the best posts&lt;/a&gt; on the subject that I’ve seen, though a quick Google search will return several articles detailing versions of this workflow.&lt;/p&gt;

&lt;p&gt;###Deployment Web Services&lt;/p&gt;

&lt;p&gt;Several online services offer deployment workflows for apps and sites. Most offer tiers of services that range from free to monthly fees based on the size and number of sites you’ll be updating. While many of their services aren’t really necessary for smaller static sites, the convenience of having your deployment automated with a single click is pretty nice, and the extra features can come in handy as your site grows. Check out &lt;a href=&quot;http://beanstalkapp.com/&quot; title=&quot;Beanstalk&quot;&gt;Beanstalk&lt;/a&gt;, &lt;a href=&quot;http://deploybot.com/&quot; title=&quot;Deploybot&quot;&gt;DeployBot&lt;/a&gt;, &lt;a href=&quot;https://www.netlify.com/&quot; title=&quot;Netlify&quot;&gt;Netlify&lt;/a&gt; and &lt;a href=&quot;https://travis-ci.org/&quot; title=&quot;Travis CI&quot;&gt;Travis CI&lt;/a&gt; for a good idea of how these services work and if they’re right for you.&lt;/p&gt;

&lt;p&gt;###Github&lt;/p&gt;

&lt;p&gt;Github uses Jekyll to power it’s Github Pages feature, so it’s only natural that deploying Jekyll sites through Github is quick and easy. You can even host your personal or project site for free on Github. You have two options for serving your site: user/organization or as a project page. Each Github user gets one free user/organization Github Pages site, and unlimited project pages. Organization pages are served as the “home” site for the user, so it’s served at &lt;code class=&quot;highlighter-rouge&quot;&gt;username.github.io.&lt;/code&gt; Project pages are served as subdomains, so they would be served at &lt;code class=&quot;highlighter-rouge&quot;&gt;username.github.io/project-name.&lt;/code&gt; The only real difference between the two methods is how you format relative links, as project pages have the project name directory as part of their base URL. You can even redirect a custom domain to your Github Pages site, which makes it a very attractive choice for hosting personal blogs and smaller sites.&lt;/p&gt;

&lt;p&gt;The workflow for deploying to Github Pages is simple. Login to your Github account, create a new repo, and then point your local repo to use the new Github repo as its remote. Create a new branch called &lt;code class=&quot;highlighter-rouge&quot;&gt;gh-pages&lt;/code&gt; and push everything except the &lt;strong&gt;_site&lt;/strong&gt; directory to your new Github repo. Github will detect the Jekyll site, build it, and serve the site at the appropriate URL. From there, updating the site is as simple as writing a new Markdown file and making a push.&lt;/p&gt;

&lt;p&gt;###More information&lt;/p&gt;

&lt;p&gt;For more information on deploying Jekyll sites (and more options), check out the section on &lt;a href=&quot;http://jekyllrb.com/docs/deployment-methods/&quot; title=&quot;deployment methods&quot;&gt;deployment methods&lt;/a&gt; in Jekyll’s documentation.&lt;/p&gt;
</description>
        <pubDate>Sat, 01 Aug 2015 00:00:00 +0600</pubDate>
        <link>http://localhost:4000/LearnWeb/2015/08/01/deployment-options.html</link>
        <guid isPermaLink="true">http://localhost:4000/LearnWeb/2015/08/01/deployment-options.html</guid>
        
        <category>jekyll</category>
        
        <category>git</category>
        
        
      </item>
    
      <item>
        <title>Jekyll and CSS</title>
        <description>&lt;p&gt;One of my favorite things about Jekyll is how it gets out of the way and lets you, the designer, actually design. Jekyll imposes no type of structure or framework, no default classes, layout, or coding conventions. You’re free to structure and style your content as you see fit. As such how you plan and author your styles is entirely up to you. There are, however, a few things you want to keep in mind when writing CSS for a Jekyll site.&lt;/p&gt;

&lt;p&gt;###Location&lt;/p&gt;

&lt;p&gt;Normally I like to keep styles in a directory titled &lt;strong&gt;_css&lt;/strong&gt;. This naming convention doesn’t work for Jekyll, as an underscore at the beginning of a directory signals Jekyll to process the contents of the directory and not to include it in the final directory structure. As such to ensure your CSS is copied to the finished site be sure to name it &lt;strong&gt;css&lt;/strong&gt; or a similar name that doesn’t start with an underscore.&lt;/p&gt;

&lt;p&gt;###Linking&lt;/p&gt;

&lt;p&gt;There are essentially two ways to link to external resources like CSS within Jekyll pages and templates. One would be to use the site baseURL to prefix your CSS files:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ site.baseurl }}/css/main.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If your site will always be served from the root folder, you can eliminate the &lt;code class=&quot;highlighter-rouge&quot;&gt;site.url&lt;/code&gt; object and just use a &lt;strong&gt;site-root relative&lt;/strong&gt; link:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/css/main.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It’s important to note here that relative links for assets like CSS can be difficult when hosting sites on &lt;a href=&quot;https://pages.github.com/&quot; title=&quot;Github Pages&quot;&gt;Github Pages&lt;/a&gt;. Essentially there are two ways to host pages on Github Pages, as either user/organization pages or project pages.&lt;/p&gt;

&lt;p&gt;User and organization pages live in a GitHub repository dedicated to only the GitHub Pages files and are stored in the &lt;strong&gt;master branch&lt;/strong&gt;. This repository must be named after the account name, which will be &lt;strong&gt;username.github.io&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Project Pages are stored in the same repository as the project they are for, except that the website content is stored in a specially named &lt;strong&gt;gh-pages&lt;/strong&gt; branch. The &lt;strong&gt;master&lt;/strong&gt; branch can hold the project itself, or even be empty.&lt;/p&gt;

&lt;p&gt;This matters because if the site is served through a project page, its baseURL changes as the site is served through a subpath of your user domain at &lt;strong&gt;username.github.io/project&lt;/strong&gt;. This means that in these cases, you’ll need to set your baseURL to &lt;code class=&quot;highlighter-rouge&quot;&gt;/project-name&lt;/code&gt;. Note the leading slash and no trailing slash. This can also lead to problems when testing the files locally, so be sure to read Jekyll’s documentation on &lt;a href=&quot;http://jekyllrb.com/docs/github-pages/&quot; title=&quot;Github Pages documentation&quot;&gt;hosting with Github Pages&lt;/a&gt; for a full account.&lt;/p&gt;

&lt;p&gt;###Jekyll and SASS&lt;/p&gt;

&lt;p&gt;Jekyll comes with built-in support for SASS, so there’s no need to install or modify your configuration in order to make it work. There are, however, one or two things you need to keep in mind as you work with SASS in Jekyll.&lt;/p&gt;

&lt;p&gt;First, in order to ensure Jekyll processes SASS files, you need to put an empty front matter string at the top of the page. You can include a comment if you’d like, but it doesn’t really matter. So include this at the top of each SASS file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
# Front matter added to ensure Jekyll processes file.
---

// write styles after front matter

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you look at Jekyll’s default directory structure, you no doubt saw the &lt;strong&gt;_sass&lt;/strong&gt; directory, which can lead to some confusion about where to place SASS files. Jekyll copies over any processed SASS file in the exact same location it was processed. So, if you have the file &lt;strong&gt;css/styles.scss&lt;/strong&gt; it will be processed and placed at &lt;strong&gt;css/styles.css&lt;/strong&gt; in the generated site. The &lt;strong&gt;_sass&lt;/strong&gt; directory is for SASS import files. If you place the partial &lt;code class=&quot;highlighter-rouge&quot;&gt;.scss&lt;/code&gt; files that you are importing and use &lt;code class=&quot;highlighter-rouge&quot;&gt;@import&lt;/code&gt; to assemble them into your main stylesheet, Jekyll will process and assemble them at runtime.&lt;/p&gt;

&lt;p&gt;So if you do something like this in your main &lt;code class=&quot;highlighter-rouge&quot;&gt;.scss&lt;/code&gt; file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
# Front matter added to ensure Jekyll processes file.
---

// Imports
@import &quot;type&quot;;
@import &quot;layout&quot;;
@import &quot;components&quot;;

//styles
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Place the files &lt;code class=&quot;highlighter-rouge&quot;&gt;type.scss&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;layout.scss&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;components.scss&lt;/code&gt; in the &lt;strong&gt;_sass&lt;/strong&gt; directory and Jekyll will do the rest!&lt;/p&gt;
</description>
        <pubDate>Mon, 13 Jul 2015 00:00:00 +0600</pubDate>
        <link>http://localhost:4000/LearnWeb/2015/07/13/css.html</link>
        <guid isPermaLink="true">http://localhost:4000/LearnWeb/2015/07/13/css.html</guid>
        
        <category>php</category>
        
        <category>wordpress</category>
        
        <category>css</category>
        
        <category>tips</category>
        
        
      </item>
    
      <item>
        <title>YAML front matter</title>
        <description>&lt;p&gt;YAML front matter is perhaps the most important aspect of creating sites through Jekyll. It allows you to control how Jekyll processes and builds pages, create page-specific variables, and triggers file processing. Let’s take a closer look at front matter and how it can help you create more efficient Jekyll sites.&lt;/p&gt;

&lt;p&gt;The front matter must be the first item in a file and must take the form of valid YAML set between triple-dashed lines. Here is a basic example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;default&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Welcome to Jekyll&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;2015-08-15 12:34&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;James Williamson&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In this example Jekyll is instructed to use the &lt;strong&gt;default.html&lt;/strong&gt; template for the content, and page variables for both the &lt;strong&gt;title&lt;/strong&gt; of the page and the &lt;strong&gt;author&lt;/strong&gt; are created. These can be written to the page using the &lt;code class=&quot;highlighter-rouge&quot;&gt;page.title&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;page.author&lt;/code&gt; objects. A &lt;strong&gt;date&lt;/strong&gt; for the page is given as well, and when used for a Post this will override the date used in the name of the post.&lt;/p&gt;

&lt;p&gt;There are many predefined Global variables that you can set in the front matter of a page or post. These are:&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;layout&lt;/dt&gt;
  &lt;dd&gt;Specifies which template to use for the content. As such it must point to a file in the &lt;strong&gt;_layouts&lt;/strong&gt; directory. Do not add the file extension to the template name. To reference the &lt;strong&gt;post.html&lt;/strong&gt; template you would add &lt;code class=&quot;highlighter-rouge&quot;&gt;layout: post&lt;/code&gt;.&lt;/dd&gt;
  &lt;dt&gt;permalink&lt;/dt&gt;
  &lt;dd&gt;Sets the permalink for the targeted file and is used to overwrite the default permalink style for a post. For example, the setting &lt;code class=&quot;highlighter-rouge&quot;&gt;permalink: /blog/:title&lt;/code&gt; would overwrite the site permalink settings and locate the post at &lt;strong&gt;/blog/post-title/index.html&lt;/strong&gt;.&lt;/dd&gt;
  &lt;dt&gt;published&lt;/dt&gt;
  &lt;dd&gt;A boolean value that you can set to &lt;strong&gt;false&lt;/strong&gt; if you don’t want the post published as the site is generated.&lt;/dd&gt;
  &lt;dt&gt;category&lt;/dt&gt;
  &lt;dt&gt;categories&lt;/dt&gt;
  &lt;dd&gt;Assigns a single category or space-separated list of categories to a post. Categories can be used in permalinks and are hierarchical in nature. Allows you to structure posts like &lt;strong&gt;web-design/html/post-title/index.html&lt;/strong&gt;. Posts can also be organized and sorted by categories.&lt;/dd&gt;
  &lt;dt&gt;tags&lt;/dt&gt;
  &lt;dd&gt;Similar to categories, you can apply a single tag or multiples tags in a YAML list or a space-separated string. Although posts can be organized and sorted by tags, they can’t be used for permalinks like categories.&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;###Custom variables&lt;/p&gt;

&lt;p&gt;In addition to the predefined Global Variables, you can create any custom variable you want. That variable can then be accessed by any page or post that uses that content.&lt;/p&gt;

&lt;p&gt;The most common form of custom variable is to store information like page titles, author names, and descriptions that can be added to the page or in &lt;strong&gt;meta&lt;/strong&gt; tags to enhance page metadata. You can take this even further and control things like page layout as well. Let’s say that most pages in your site uses a simple sidebar, but occasionally you need to use a longer sidebar. In your template you could have the following markup:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-liquid&quot; data-lang=&quot;liquid&quot;&gt;&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;sidebar&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;long&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sidebar-long&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;%}
    {% else %}
    {% include sidebar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;endif&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now in any page or post that uses this template all you would need to add is the following variable to the front matter:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sidebar-long: true
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Combining includes, templates, and front matter variables gives you an incredible amount of control over how pages are built, and limits the amount of variations you need in the form of templates.&lt;/p&gt;

&lt;p&gt;You can even get to the point where you are generating entire pages with nothing but front matter. Let’s say you want to generate a single page for every tag that lists all posts tagged with that specific tag. You could create a template that generates everything dynamically based on the tag name. To create a new tag page, you simply name the file &lt;strong&gt;tag-name.md&lt;/strong&gt; and add the following to the front matter:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;tag-page&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Tagged with Jekyll&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Jekyll&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;permalink&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/tags/:title&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The rest of the file could be empty and Jekyll would dynamically generate the page based on the tag name.&lt;/p&gt;

&lt;p&gt;###SASS and CoffeeScript&lt;/p&gt;

&lt;p&gt;Jekyll provides built-in support for Sass and CoffeeScript, but won’t process those files automatically. To enable those files for processing, add an empty front matter region to the top of the page:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
---
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The files will then be processed, and the resulting file will be located in the same directory in the generated site. The file &lt;strong&gt;css/layout.scss&lt;/strong&gt; would generate &lt;strong&gt;css/layout.css&lt;/strong&gt; in the finished site.&lt;/p&gt;
</description>
        <pubDate>Thu, 09 Jul 2015 00:00:00 +0600</pubDate>
        <link>http://localhost:4000/LearnWeb/html/2015/07/09/front-matter.html</link>
        <guid isPermaLink="true">http://localhost:4000/LearnWeb/html/2015/07/09/front-matter.html</guid>
        
        <category>php</category>
        
        <category>wordpress</category>
        
        <category>css</category>
        
        <category>tips</category>
        
        
        <category>html</category>
        
      </item>
    
      <item>
        <title>Markdown Basics</title>
        <description>&lt;p&gt;In Jekyll, content for pages and posts can be written in either HTML or Markdown. Although there will be times that HTML is the more appropriate choice, Markdown provides a more natural writing environment that makes blogging easier and less of a chore. In this post we’ll examine how Jekyll uses Markdown and cover some basic Markdown syntax.&lt;/p&gt;

&lt;p&gt;If you’ve never used it before, Markdown is a text-to-HTML converter that let’s you write text naturally in plain text format and then convert it to valid HTML. To learn more about it, read John Gruber’s post introducing Markdown on &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot; title=&quot;Introducing Markdown&quot;&gt;Daring Fireball&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Jekyll supports multiple Markdown rendering engines and allows you to specify which engine to use in the site’s configuration. Currently Jekyll supports &lt;a href=&quot;http://kramdown.gettalong.org/index.html&quot; title=&quot;Kramdown&quot;&gt;Kramdown&lt;/a&gt;, &lt;a href=&quot;https://github.com/vmg/redcarpet&quot; title=&quot;Redcarpet&quot;&gt;Redcarpet&lt;/a&gt;, and &lt;a href=&quot;http://dafoster.net/projects/rdiscount/&quot; title=&quot;Rdiscount&quot;&gt;RDiscount&lt;/a&gt;, although you’re free to use any rendering engine you have installed or even write your own!&lt;/p&gt;

&lt;p&gt;To specify a rendering engine, simply add this line to your &lt;strong&gt;_config,yml&lt;/strong&gt; file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;markdown: kramdown
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;For the most part, the rendering engines are the same, although they do have subtle differences in syntax and element support. Currently Kramdown is the default Markdown renderer for Jekyll. Let’s take a look at some basic Kramdown syntax.&lt;/p&gt;

&lt;p&gt;The following passage:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#My main heading
{: .intro }

This is my initial paragraph. In it I’d like to provide a link to the [Jekyll homepage](http://jekyllrb.com/ &quot;Jekyll&quot;). I want to add **bold** and *italic* formatting to text as well using the `strong` and `emphasis` tags.

This is another paragraph. I’d like to follow it with an unordered list.

* item 1
* item 2
* item 3

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Would be rendered in HTML as:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;intro&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;My main heading&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is my initial paragraph. In it I’d like to provide a link to the &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://jekyllrb.com/&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Jekyll&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Jekyll homepage&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;. I want to add &lt;span class=&quot;nt&quot;&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;bold&lt;span class=&quot;nt&quot;&gt;&amp;lt;/strong&amp;gt;&lt;/span&gt; and &lt;span class=&quot;nt&quot;&gt;&amp;lt;em&amp;gt;&lt;/span&gt;italic&lt;span class=&quot;nt&quot;&gt;&amp;lt;/em&amp;gt;&lt;/span&gt; formatting to text as well using the &lt;span class=&quot;nt&quot;&gt;&amp;lt;code&amp;gt;&lt;/span&gt;strong&lt;span class=&quot;nt&quot;&gt;&amp;lt;/code&amp;gt;&lt;/span&gt; and &lt;span class=&quot;nt&quot;&gt;&amp;lt;code&amp;gt;&lt;/span&gt;emphasis&lt;span class=&quot;nt&quot;&gt;&amp;lt;/code&amp;gt;&lt;/span&gt; tags.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is another paragraph. I’d like to follow it with an unordered list.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;item 1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;item 2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;item 3&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;As you can see, Markdown frees you from many of the structural restraints that would make it difficult to author something like a blog post using HTML. To write two paragraphs, for example, you simply write two paragraphs, no &amp;lt;p&amp;gt; tags or special formatting required. Let’s take a quick look at how to format some of the basic HTML elements in Kramdown.&lt;/p&gt;

&lt;p&gt;###Paragraphs&lt;/p&gt;

&lt;p&gt;Consecutive lines of text are formatted as a single paragraph. As a block level element, you must to add a blank line after it to separate it from other block-level elements.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;This is a paragraph.

This is as well.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Renders as:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is a paragraph.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is as well.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###Headings&lt;/p&gt;

&lt;p&gt;There are multiple ways to format headings in Kramdown. The easiest is to preceed the heading with hash characters (&lt;strong&gt;#&lt;/strong&gt;) equal to the heading level. An &lt;code class=&quot;highlighter-rouge&quot;&gt;h1&lt;/code&gt; for example, would be written as &lt;code class=&quot;highlighter-rouge&quot;&gt;#heading 1&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# This is a heading 1

## This is a heading 2

### This is a heading 3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Renders as:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;This is a heading 1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;This is a heading 2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;h3&amp;gt;&lt;/span&gt;This is a heading 3&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###Blockquotes&lt;/p&gt;

&lt;p&gt;Blockquotes are formatted using the “greater than” character (&lt;strong&gt;&amp;gt;&lt;/strong&gt;) at the start of the blockquote. Text inside a blockquote is wrapped with a paragraph.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; This is a blockquote.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Renders as:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;blockquote&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is a blockquote.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/blockquote&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###Ordered Lists&lt;/p&gt;

&lt;p&gt;To create an ordered list, simply type a list started by a number followed by a period. Each list item should be on a separate line. Nested lists are created by indenting a list underneath an existing list item.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. This is the first item
2. This is the second item
3. This is the third item
    1. This is a nested list
    2. More nested list
4. This is the fourth item.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Renders as:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ol&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;This is the first item&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;This is the second item&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;This is the third item
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;ol&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;This is a nested list&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;More nested list&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ol&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;This is the fourth item.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ol&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###Block-level attributes&lt;/p&gt;

&lt;p&gt;Often you may wish to assign attributes to block-level elements. To do this, follow the element with a &lt;em&gt;block inline attribute list&lt;/em&gt; (block IAL). A block IAL consists of a left curly brace, followed by a colon, the attribute definitions and a right curly brace.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Apply the class “main” to this heading
{: .main}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Renders as:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Apply the class “main” to this heading&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Classes are applied with the syntax &lt;code class=&quot;highlighter-rouge&quot;&gt;.className&lt;/code&gt; and IDs with &lt;code class=&quot;highlighter-rouge&quot;&gt;#ID-name&lt;/code&gt;. For any other attribute you simply write the desired syntax:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Another heading with the ‘role’ attribute applied
{: role=&quot;banner&quot;}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Renders as:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;role=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;banner&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Another heading with the ‘role’ attribute applied
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;For multiple attributes, create a space-separated list inside the blockIAL.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# This heading has two classes and one ID applied
{: .class1 .class2 #ID-1}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Renders as:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;class1 class2&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ID-1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;This heading has two classes and one ID applied&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###Inline formatting&lt;/p&gt;

&lt;p&gt;Emphasis can be added to text by surrounding the text with either asterisks or underscores. This will result in wrapping the content in either the &lt;code class=&quot;highlighter-rouge&quot;&gt;strong&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;emphasis&lt;/code&gt; tag depending upon how many are used:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;I want to wrap **this text** in a strong tag and *this text* in an emphasis tag.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Renders as:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;I want to wrap &lt;span class=&quot;nt&quot;&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;this text&lt;span class=&quot;nt&quot;&gt;&amp;lt;/strong&amp;gt;&lt;/span&gt; in a strong tag and &lt;span class=&quot;nt&quot;&gt;&amp;lt;em&amp;gt;&lt;/span&gt;this text&lt;span class=&quot;nt&quot;&gt;&amp;lt;/em&amp;gt;&lt;/span&gt; in an emphasis tag.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###Links&lt;/p&gt;

&lt;p&gt;You can create a link by surrounding the text with square brackets and then directly following it with the link URL in parentheses. To add a title attribute, add the desired title in straight quotes (“ “) after the link URL.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;I usually search using [Google](https://www.google.com &quot;Google&quot;).
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Renders as:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;I usually search using &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://www.google.com&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Google&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Google&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;###Images&lt;/p&gt;

&lt;p&gt;Images are similar to links, but use an exclamation mark before the square brackets. The link text will become the alternative text of the image and the link URL specifies the image source.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![My dog](/images/Baxter.jpg)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Renders as:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/images/Baxter.jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;My dog&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;As you can see, Markdown is simple to write, and once you’ve learned the basic formatting options, generating semantic HTML is fairly simple. One of the most powerful Markdown features is the ability to nest HTML directly inside a Markdown document. That way if you’re unable to use Markdown to get exactly the HTML you need, you can simply inject HTML into the document and then continue using Markdown.&lt;/p&gt;

&lt;p&gt;For more information on Kramdown and for a more complete reference, visit Kramdown’s &lt;a href=&quot;http://kramdown.gettalong.org/index.html&quot; title=&quot;Kramdown&quot;&gt;project page&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 29 Jun 2015 00:00:00 +0600</pubDate>
        <link>http://localhost:4000/LearnWeb/css/2015/06/29/markdown-basics.html</link>
        <guid isPermaLink="true">http://localhost:4000/LearnWeb/css/2015/06/29/markdown-basics.html</guid>
        
        <category>php</category>
        
        <category>wordpress</category>
        
        <category>css</category>
        
        <category>tips</category>
        
        
        <category>css</category>
        
      </item>
    
  </channel>
</rss>
